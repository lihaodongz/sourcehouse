<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ironman.sourcehouse.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.ironman.sourcehouse.model.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_time" jdbcType="DATE" property="createTime"/>
        <result column="last_login_time" jdbcType="DATE" property="lastLoginTime"/>
        <result column="last_update_time" jdbcType="DATE" property="lastUpdateTime"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
    </resultMap>

    <sql id="tableName">
        user
    </sql>
    <sql id="baseField">
        id,
        name,
        email,
        phone_number,
        password,
        status,
        create_time,
        last_login_time,
        last_update_time,
        avatar
    </sql>

    <sql id="condition">
        <where>
            <if test="user.id != null">
                id = #{user.id}
            </if>
            <if test="user.name != null">
                and `name` like CONCAT('%',#{user.name},'%')
            </if>
            <if test="user.email != null">
                and email = #{user.email}
            </if>
            <if test="user.phoneNumber != null">
                and phone_number = #{user.phoneNumber}
            </if>
            <if test="user.status != null">
                and status = #{user.status}
            </if>
            <if test="user.createTime != null">
                and create_time = #{user.createTime}
            </if>
            <if test="user.lastLoginTime != null">
                and last_login_time = #{user.lastLoginTime}
            </if>
            <if test="user.lastUpdateTime != null">
                and last_update_time = #{user.lastUpdateTime}
            </if>
            <if test="user.password != null">
                and password = #{user.password}
            </if>
            <if test="user.avatar != null">
                and  avatar = #{user.avatar}
            </if>
        </where>
    </sql>
    <sql id="singalInsert">
        <set>
            <if test="user.id != null">
                 id = #{user.id},
            </if>
            <if test="user.name != null">
                 `name` = #{user.name}
            </if>
            <if test="user.email != null">
                 email = #{user.email},
            </if>
            <if test="user.phoneNumber != null">
                 phone_number = #{user.phoneNumber},
            </if>
            <if test="user.status != null">
                 status = #{user.status},
            </if>
            <if test="user.createTime != null">
                 create_time = #{user.createTime},
            </if>
            <if test="user.lastLoginTime != null">
                 last_login_time = #{user.lastLoginTime},
            </if>
            <if test="user.lastUpdateTime != null">
                 last_update_time = #{user.lastUpdateTime},
            </if>
            <if test="user.password != null">
                 password = #{user.password},
            </if>
            <if test="user.avatar != null">
                  avatar = #{user.avatar},
            </if>
        </set>
    </sql>

    <select id="selectUser" resultType="com.ironman.sourcehouse.model.User">
        select
        <include refid="baseField"/>
        from
        <include refid="tableName"/>
        <include refid="condition"/>
    </select>


    <select id="selectUserByIds" resultType="com.ironman.sourcehouse.model.User">
        select
        <include refid="baseField"/>
        from
        <include refid="tableName"/>
        where
        id in
        <foreach collection="ids" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <insert id="insertUser">
        insert into
        <include refid="tableName"/>
        <include refid="singalInsert"/>
    </insert>

    <insert id="batchInsert">
        insert into
        <include refid="tableName"/>


    </insert>


</mapper>